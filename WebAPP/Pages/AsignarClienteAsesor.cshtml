@page
@model WebAPP.Pages.AsignarClienteAsesorModel
@{
    ViewData["Title"] = "Asignar Cliente a Asesor";
    Layout = "~/Pages/Shared/AdminLayout.cshtml";
}

<div class="content">
    <h1>Asignar Cliente a Asesor</h1>

    <div class="form-box">
        <div class="form-group">
            <label for="selectCliente">Seleccionar Cliente:</label>
            <select id="selectCliente" class="form-control"></select>
        </div>

        <div class="form-group">
            <label for="selectAsesor">Seleccionar Asesor:</label>
            <select id="selectAsesor" class="form-control"></select>
        </div>

        <button id="btnAsignar" class="btn-green">Asignar</button>
    </div>
</div>

<style>
    body, html {
        background-color: black;
        color: white;
    }

    .content {
        flex: 1;
        padding: 30px;
    }

    .form-box {
        background-color: #111;
        padding: 30px;
        border-radius: 15px;
        max-width: 600px;
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border-radius: 8px;
        border: none;
    }

    .btn-green {
        background: #00D395;
        color: black;
        padding: 10px 20px;
        border-radius: 8px;
        border: none;
        cursor: pointer;
        font-size: 16px;
        font-weight: bold;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", async () => {
        const usuarioData = sessionStorage.getItem("usuario");

        if (!usuarioData) {
            Swal.fire({
                icon: "warning",
                title: "Tu sesión ha sido cerrada",
                text: "Para ingresar nuevamente por favor inicia sesión.",
                confirmButtonColor: "#8F5AF5",
                backdrop: `rgba(0, 0, 0, 0.95)`
            }).then(() => {
                window.location.href = "/Index";
            });
            return;
        }

        let usuario;
        try {
            usuario = JSON.parse(usuarioData);
        } catch (e) {
            sessionStorage.clear();
            Swal.fire({
                icon: "warning",
                title: "Sesión inválida",
                text: "Para ingresar nuevamente por favor inicia sesión.",
                confirmButtonColor: "#8F5AF5",
                backdrop: `rgba(0, 0, 0, 0.95)`
            }).then(() => {
                window.location.href = "/Index";
            });
            return;
        }

        await cargarClientes();
        await cargarAsesores();
    });

    async function cargarClientes() {
        try {
            const res = await fetch("https://localhost:7057/api/Cliente/RetrieveAll");
            const clientes = await res.json();

            const dropdown = document.getElementById("selectCliente");
            clientes.forEach(c => {
                const option = document.createElement("option");
                option.value = c.id;
                option.text = c.correo;
                dropdown.appendChild(option);
            });
        } catch (err) {
            console.error("Error al cargar clientes", err);
        }
    }

    async function cargarAsesores() {
        try {
            const res = await fetch("https://localhost:7057/api/Asesor/RetrieveAll");
            const asesores = await res.json();

            const dropdown = document.getElementById("selectAsesor");
            asesores.forEach(a => {
                const option = document.createElement("option");
                option.value = a.id;
                option.text = a.correo;
                dropdown.appendChild(option);
            });
        } catch (err) {
            console.error("Error al cargar asesores", err);
        }
    }

    document.getElementById("btnAsignar").addEventListener("click", async () => {
        const idCliente = document.getElementById("selectCliente").value;
        const idAsesor = document.getElementById("selectAsesor").value;

        if (!idCliente || !idAsesor) {
            Swal.fire("Campos requeridos", "Por favor seleccione un cliente y un asesor.", "warning");
            return;
        }

        try {
            const res = await fetch("https://localhost:7057/api/Cliente/AsignarClienteAsesor", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ idCliente: parseInt(idCliente), idAsesor: parseInt(idAsesor) })
            });

            const msg = await res.text();
            Swal.fire("Asignación completada", msg, "success");
        } catch (err) {
            Swal.fire("Error", "Error al asignar cliente.", "error");
            console.error(err);
        }
    });
</script>